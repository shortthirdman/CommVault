# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI

on:
  workflow_dispatch:
  # push:
    # branches: [ "main", "feature/**", "bugfix/**", "hotfix/**" ]
  pull_request:
    branches: [ "main", "feature/**", "bugfix/**", "hotfix/**" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B clean package --file commvault-accounts/pom.xml
      
    # - name: Attest Maven build provenance
      # uses: actions/attest-build-provenance@v2
      # with:
        # show-summary: true
        # subject-path: '${{ github.workspace }}/commvault-accounts/target/commvault-accounts-**.jar'
        # push-to-registry: false
    
    - name: Build the Docker image
      run: docker build commvault-accounts/. --rm --compress --file commvault-accounts/Dockerfile-prod --tag ${{ env.IMAGE_NAME | toLowerCase }}:latest
    
    - name: Cleanup Docker resources
      run: docker system prune -a -f